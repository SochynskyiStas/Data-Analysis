library(data.table)
library(tm) # package for text mining
library(wordcloud) # for word visualization
library(ape) # dendrogram plotting
library(ggdendro) # dendrogram plotting
orders<-read.csv("orders_rfm.csv",sep=",")
head(orders,7)
orders$order_date<-as.Date(orders$order_date, format='%Y-%m-%d')
class(orders$order_date)
reporting_date <- as.Date('2017-04-01', format='%Y-%m-%d')
print(reporting_date)
class(reporting_date) #additional check
necessary_orders <- orders
necessary_orders <- filter(necessary_orders, order_date <= reporting_date)
length(unique(necessary_orders$client_id)) # Client ids
table(necessary_orders$product) # Times each product was bought
frm_tbl_initial <- necessary_orders %>%
group_by(client_id) %>%
summarise(order_frequency = n(), # amount of products
order_recency = min(reporting_date - order_date),
# days since last order
order_monetary = sum(money_spent)) # total amount spent
head(frm_tbl_initial)
frm_tbl_initial$order_recency <- as.numeric(frm_tbl_initial$order_recency)
class(frm_tbl_initial$order_recency)
summary(frm_tbl_initial) # to explore limits
fr_tbl <- mutate(frm_tbl_initial,
frequency_bins = cut(order_frequency,
breaks = c(0,5,8,9,12,32)))
table(fr_tbl$frequency_bins)
fr_tbl <- mutate(fr_tbl,
recency_bins = cut(order_recency,
breaks = c(-1,12,30,34,51,89)))
table(fr_tbl$recency_bins)
fr_tbl <- mutate(fr_tbl,
monetary_bins = cut(order_monetary,
breaks=c(5,414,761,880,1215,3495)))
table(fr_tbl$monetary_bins)
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins, monetary=fr_tbl$monetary_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
survey<-read.csv("customer_survey.csv",sep=" ")
head(survey,7)
#levels(survey$gender)
survey$gender<-as.numeric(survey$gender) - 1
survey$ownHome<-as.numeric(survey$ownHome) - 1
survey$subscribe<-as.numeric(survey$subscribe) - 1
head(survey,10)
data_clustering <- survey %>%
mutate(age=scale(age),
gender=scale(gender),
income=scale(income),
kids=scale(kids),
ownHome=scale(ownHome),
subscribe=scale(subscribe))
head(data_clustering)
# finding optimal number of clusters
elbow_method <- function(data, max_k=100){
require(ggplot2)
wss <- 0
for (i in 1:max_k){
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
p <- data.frame(number_of_clusters=c(1:max_k), wss=wss) %>%
ggplot(aes(x=number_of_clusters, y=wss)) + geom_point() +
geom_line() + theme_bw() + ylab("Within groups sum of squares") #QUESTION
return(print(p))
}
# apply the function
elbow_method(data_clustering[,-1],max_k=25)
clusters <- kmeans(data_clustering, centers = 9, nstart=25)
#data_clustering$cluster <- as.factor(clusters$cluster)
clusters
set.seed(43)
random_data_set<- sample_n(data_clustering, 30)
random_data_set<- as.data.frame(random_data_set)
distance_m <- dist(as.matrix(random_data_set[,-1]))
hc <- hclust(distance_m)
plot(hc)
set.seed(42)
random_data_set<- sample_n(data_clustering, 30)
random_data_set<- as.data.frame(random_data_set)
distance_m <- dist(as.matrix(random_data_set[,-1]))
hc <- hclust(distance_m)
plot(hc)
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins)
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins, monetary=fr_tbl$monetary_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
library(dplyr)
library(ggplot2)
library(gridExtra)
library(data.table)
library(tm) # package for text mining
library(wordcloud) # for word visualization
library(ape) # dendrogram plotting
library(ggdendro) # dendrogram plotting
orders<-read.csv("orders_rfm.csv",sep=",")
head(orders,7)
orders$order_date<-as.Date(orders$order_date, format='%Y-%m-%d')
class(orders$order_date)
reporting_date <- as.Date('2017-04-01', format='%Y-%m-%d')
print(reporting_date)
class(reporting_date) #additional check
necessary_orders <- orders
necessary_orders <- filter(necessary_orders, order_date <= reporting_date)
length(unique(necessary_orders$client_id)) # Client ids
table(necessary_orders$product) # Times each product was bought
frm_tbl_initial <- necessary_orders %>%
group_by(client_id) %>%
summarise(order_frequency = n(), # amount of products
order_recency = min(reporting_date - order_date),
# days since last order
order_monetary = sum(money_spent)) # total amount spent
head(frm_tbl_initial)
frm_tbl_initial$order_recency <- as.numeric(frm_tbl_initial$order_recency)
class(frm_tbl_initial$order_recency)
summary(frm_tbl_initial) # to explore limits
fr_tbl <- mutate(frm_tbl_initial,
frequency_bins = cut(order_frequency,
breaks = c(0,5,8,9,12,32)))
table(fr_tbl$frequency_bins)
fr_tbl <- mutate(fr_tbl,
recency_bins = cut(order_recency,
breaks = c(-1,12,30,34,51,89)))
table(fr_tbl$recency_bins)
fr_tbl <- mutate(fr_tbl,
monetary_bins = cut(order_monetary,
breaks=c(5,414,761,880,1215,3495)))
table(fr_tbl$monetary_bins)
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins, monetary=fr_tbl$monetary_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
survey<-read.csv("customer_survey.csv",sep=" ")
head(survey,7)
#levels(survey$gender)
survey$gender<-as.numeric(survey$gender) - 1
survey$ownHome<-as.numeric(survey$ownHome) - 1
survey$subscribe<-as.numeric(survey$subscribe) - 1
head(survey,10)
data_clustering <- survey %>%
mutate(age=scale(age),
gender=scale(gender),
income=scale(income),
kids=scale(kids),
ownHome=scale(ownHome),
subscribe=scale(subscribe))
head(data_clustering)
# finding optimal number of clusters
elbow_method <- function(data, max_k=100){
require(ggplot2)
wss <- 0
for (i in 1:max_k){
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
p <- data.frame(number_of_clusters=c(1:max_k), wss=wss) %>%
ggplot(aes(x=number_of_clusters, y=wss)) + geom_point() +
geom_line() + theme_bw() + ylab("Within groups sum of squares") #QUESTION
return(print(p))
}
# apply the function
elbow_method(data_clustering[,-1],max_k=25)
clusters <- kmeans(data_clustering, centers = 9, nstart=25)
#data_clustering$cluster <- as.factor(clusters$cluster)
clusters
clusters <- kmeans(data_clustering, centers = 9, nstart=25)
#data_clustering$cluster <- as.factor(clusters$cluster)
clusters
set.seed(42)
random_data_set<- sample_n(data_clustering, 30)
random_data_set<- as.data.frame(random_data_set)
distance_m <- dist(as.matrix(random_data_set[,-1]))
hc <- hclust(distance_m)
plot(hc)
clusters <- kmeans(data_clustering, centers = 9, nstart=25)
#data_clustering$cluster <- as.factor(clusters$cluster)
clusters
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=order_frequency, y=order_recency, color=cluster)) + geom_point(size=2) + theme_bw()
clusters <- kmeans(data_clustering, centers = 9, nstart=25)
#data_clustering$cluster <- as.factor(clusters$cluster)
clusters
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=order_frequency, y=order_recency, color=cluster)) + geom_point(size=2) + theme_bw()
p1 <- ggplot(data_clustering, aes(x=order_frequency, y=order_recency, color=cluster)) + geom_point(size=2) + theme_bw()
p2 <- ggplot(data_clustering, aes(x=order_frequency, y=order_monetary, color=cluster)) + geom_point(size=2) + theme_bw()
p3 <- ggplot(data_clustering, aes(x=order_monetary, y=order_recency, color=cluster)) + geom_point(size=2) + theme_bw()
grid.arrange(p1,p2,p3, nrow=3)
View(data_clustering)
p1 <- ggplot(data_clustering, aes(x=income, y=age, color=cluster)) + geom_point(size=2) + theme_bw()
p2 <- ggplot(data_clustering, aes(x=income, y=gender, color=cluster)) + geom_point(size=2) + theme_bw()
p3 <- ggplot(data_clustering, aes(x=subsribe, y=income, color=cluster)) + geom_point(size=2) + theme_bw()
grid.arrange(p1,p2,p3, nrow=3)
p1 <- ggplot(data_clustering, aes(x=income, y=age, color=cluster)) + geom_point(size=2) + theme_bw()
p2 <- ggplot(data_clustering, aes(x=income, y=gender, color=cluster)) + geom_point(size=2) + theme_bw()
p3 <- ggplot(data_clustering, aes(x=subscribe, y=income, color=cluster)) + geom_point(size=2) + theme_bw()
grid.arrange(p1,p2,p3, nrow=3)
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=subscribe, y=income, color=cluster)) + geom_point(size=2)
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=income, y=age, color=cluster)) + geom_point(size=2)
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=age, y=income, color=cluster)) + geom_point(size=2)
View(random_data_set)
set.seed(42)
random_data_set<- sample_n(data_clustering, 30)
random_data_set<- as.data.frame(random_data_set)
distance_m <- dist(as.matrix(random_data_set[,-1]))
hc <- hclust(distance_m)
plot(hc)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(data.table)
library(tm) # package for text mining
library(wordcloud) # for word visualization
library(ape) # dendrogram plotting
library(ggdendro) # dendrogram plotting
orders<-read.csv("orders_rfm.csv",sep=",")
head(orders,7)
orders$order_date<-as.Date(orders$order_date, format='%Y-%m-%d')
class(orders$order_date)
reporting_date <- as.Date('2017-04-01', format='%Y-%m-%d')
print(reporting_date)
class(reporting_date) #additional check
necessary_orders <- orders
necessary_orders <- filter(necessary_orders, order_date <= reporting_date)
length(unique(necessary_orders$client_id)) # Client ids
table(necessary_orders$product) # Times each product was bought
frm_tbl_initial <- necessary_orders %>%
group_by(client_id) %>%
summarise(order_frequency = n(), # amount of products
order_recency = min(reporting_date - order_date),
# days since last order
order_monetary = sum(money_spent)) # total amount spent
head(frm_tbl_initial)
frm_tbl_initial$order_recency <- as.numeric(frm_tbl_initial$order_recency)
class(frm_tbl_initial$order_recency)
summary(frm_tbl_initial) # to explore limits
fr_tbl <- mutate(frm_tbl_initial,
frequency_bins = cut(order_frequency,
breaks = c(0,5,8,9,12,32)))
table(fr_tbl$frequency_bins)
fr_tbl <- mutate(fr_tbl,
recency_bins = cut(order_recency,
breaks = c(-1,12,30,34,51,89)))
table(fr_tbl$recency_bins)
fr_tbl <- mutate(fr_tbl,
monetary_bins = cut(order_monetary,
breaks=c(5,414,761,880,1215,3495)))
table(fr_tbl$monetary_bins)
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins, monetary=fr_tbl$monetary_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
survey<-read.csv("customer_survey.csv",sep=" ")
head(survey,7)
#levels(survey$gender)
survey$gender<-as.numeric(survey$gender) - 1
survey$ownHome<-as.numeric(survey$ownHome) - 1
survey$subscribe<-as.numeric(survey$subscribe) - 1
head(survey,10)
data_clustering <- survey %>%
mutate(age=scale(age),
gender=scale(gender),
income=scale(income),
kids=scale(kids),
ownHome=scale(ownHome),
subscribe=scale(subscribe))
head(data_clustering)
# finding optimal number of clusters
elbow_method <- function(data, max_k=100){
require(ggplot2)
wss <- 0
for (i in 1:max_k){
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
p <- data.frame(number_of_clusters=c(1:max_k), wss=wss) %>%
ggplot(aes(x=number_of_clusters, y=wss)) + geom_point() +
geom_line() + theme_bw() + ylab("Within groups sum of squares") #QUESTION
return(print(p))
}
# apply the function
elbow_method(data_clustering[,-1],max_k=25)
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=age, y=income, color=cluster)) + geom_point(size=2)
set.seed(42)
random_data_set<- sample_n(data_clustering, 30)
random_data_set<- as.data.frame(random_data_set)
distance_m <- dist(as.matrix(random_data_set[,-1]))
hc <- hclust(distance_m)
plot(hc)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(data.table)
library(tm) # package for text mining
library(wordcloud) # for word visualization
library(ape) # dendrogram plotting
library(ggdendro) # dendrogram plotting
orders<-read.csv("orders_rfm.csv",sep=",")
head(orders,7)
orders$order_date<-as.Date(orders$order_date, format='%Y-%m-%d')
class(orders$order_date)
reporting_date <- as.Date('2017-04-01', format='%Y-%m-%d')
print(reporting_date)
class(reporting_date) #additional check
necessary_orders <- orders
necessary_orders <- filter(necessary_orders, order_date <= reporting_date)
length(unique(necessary_orders$client_id)) # Client ids
table(necessary_orders$product) # Times each product was bought
frm_tbl_initial <- necessary_orders %>%
group_by(client_id) %>%
summarise(order_frequency = n(), # amount of products
order_recency = min(reporting_date - order_date),
# days since last order
order_monetary = sum(money_spent)) # total amount spent
head(frm_tbl_initial)
frm_tbl_initial$order_recency <- as.numeric(frm_tbl_initial$order_recency)
class(frm_tbl_initial$order_recency)
summary(frm_tbl_initial) # to explore limits
fr_tbl <- mutate(frm_tbl_initial,
frequency_bins = cut(order_frequency,
breaks = c(0,5,8,9,12,32)))
table(fr_tbl$frequency_bins)
fr_tbl <- mutate(fr_tbl,
recency_bins = cut(order_recency,
breaks = c(-1,12,30,34,51,89)))
table(fr_tbl$recency_bins)
fr_tbl <- mutate(fr_tbl,
monetary_bins = cut(order_monetary,
breaks=c(5,414,761,880,1215,3495)))
table(fr_tbl$monetary_bins)
fr_tbl$frequency_bins <- factor(fr_tbl$frequency_bins, levels=rev(levels(fr_tbl$frequency_bins)))
fr_tbl$monetary_bins <- factor(fr_tbl$monetary_bins, levels=rev(levels(fr_tbl$monetary_bins)))
table(frequency=fr_tbl$frequency_bins, recency=fr_tbl$recency_bins, monetary=fr_tbl$monetary_bins)
fr_tbl_counts <- fr_tbl %>% group_by(frequency_bins, recency_bins) %>% summarise(count=n())
p_basic <- ggplot(fr_tbl_counts, aes(x=recency_bins, y=frequency_bins)) + geom_tile(aes(fill=count))+
geom_text(aes(label = count)) +
scale_fill_gradient(low='#d4f4ad', high="#f24236") + theme_bw(base_size=20)
p_basic
p_quadrants <- p_basic +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=3.47, ymax=6, color='green', alpha=0.1, fill='green') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=2.5, ymax=3.47, color='yellow', alpha=0.1, fill='yellow') +
ggplot2::annotate("rect", xmin = 0, xmax=3.47, ymin=0, ymax=2.5, color='blue', alpha=0.1, fill='blue') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=3.47, ymax=6, color='red', alpha=0.1, fill='red') +
ggplot2::annotate("rect", xmin = 3.5, xmax=6, ymin=0, ymax=3.47, color='black', alpha=0.1, fill='black')
p_quadrants +
ggplot2::annotate("text", x=1.8, y=5.8, label='New') +
ggplot2::annotate("text", x=4.8, y=5.8, label='Lost') +
ggplot2::annotate("text", x=1.4, y=2.7, label='Promising') +
ggplot2::annotate("text", x=1.8, y=0.2, label='Loyal customers') +
ggplot2::annotate("text", x=4.8, y=0.2, label='Hibernating loyal customers')
survey<-read.csv("customer_survey.csv",sep=" ")
head(survey,7)
#levels(survey$gender)
survey$gender<-as.numeric(survey$gender) - 1
survey$ownHome<-as.numeric(survey$ownHome) - 1
survey$subscribe<-as.numeric(survey$subscribe) - 1
head(survey,10)
data_clustering <- survey %>%
mutate(age=scale(age),
gender=scale(gender),
income=scale(income),
kids=scale(kids),
ownHome=scale(ownHome),
subscribe=scale(subscribe))
head(data_clustering)
# finding optimal number of clusters
elbow_method <- function(data, max_k=100){
require(ggplot2)
wss <- 0
for (i in 1:max_k){
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
p <- data.frame(number_of_clusters=c(1:max_k), wss=wss) %>%
ggplot(aes(x=number_of_clusters, y=wss)) + geom_point() +
geom_line() + theme_bw() + ylab("Within groups sum of squares") #QUESTION
return(print(p))
}
# apply the function
elbow_method(data_clustering[,-1],max_k=25)
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
clusters <- kmeans(data_clustering[,-1], centers = 9, nstart=20)
clusters
data_clustering$cluster <- as.factor(clusters$cluster) # we need it to be a factor for the plot
ggplot(data_clustering, aes(x=age, y=income, color=cluster)) + geom_point(size=2)
